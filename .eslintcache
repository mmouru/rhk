[{"C:\\Users\\martti\\Desktop\\rhk\\src\\index.js":"1","C:\\Users\\martti\\Desktop\\rhk\\src\\App.js":"2","C:\\Users\\martti\\Desktop\\rhk\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":6733,"mtime":1611501668412,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"sk7sx7",{"filePath":"11","messages":"12","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\martti\\Desktop\\rhk\\src\\index.js",[],["16","17"],"C:\\Users\\martti\\Desktop\\rhk\\src\\App.js",["18","19","20","21","22","23","24","25","26"],"import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport axios from 'axios'\nimport  Container  from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Table } from 'react-bootstrap' \nimport rhk from './rhk1.png'\nimport members from './members.gif'\nimport hof from './hof.gif'\nimport serebryanka from './sere0.png'\nimport serebryanka1 from './sere1.png'\nimport serebryanka2 from './sere3.png'\n\n\nfunction App() {\n  const [matches, setMatches] = useState([])\n\n  const pelaajat = [\"penaa\", \"mazze\", \"raksuu\", \"nykzi\", \"kallu\", \"tuomasK\"]\n\n  const kuvat = []\n\n  kuvat[0] = serebryanka\n  kuvat[1] = serebryanka1\n  kuvat[2] = serebryanka2\n\n  const [kuva, setKuva] = useState(serebryanka)\n\n  const [seconds, setSeconds] = useState(1);\n\n  const [number, setNumber] = useState(1500)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"https://aq2rhk.herokuapp.com\")\n      setMatches(response.data)\n    }\n    fetchData();\n  }, []);\n\n  const totalWins = (mathces) => {\n    let voitot = 0\n    matches.forEach(match => {\n      const score = match.tilanne.split(\"-\")\n        voitot += parseInt(score[0])\n    })\n    return voitot\n  }\n\n  const totalLoses = (mathces) => {\n    let häviöt = 0\n    matches.forEach(match => {\n      const score = match.tilanne.split(\"-\")\n        häviöt += parseInt(score[1])\n    })\n    return häviöt\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(seconds => seconds + 1);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  \n  const getColor = (tilanne) => {\n    const score = tilanne.split(\"-\")\n\n    if(score[0] === score[1]){\n      return (\"yellow\")\n    }\n    else if ( score[0] > score[1]){\n      return (\"green\")\n    }\n    else { return (\"red\")}\n  }\n\n  const winPercent = (matsit) => {\n    let wins = 0\n    matsit.forEach(matsi => {\n      const score = matsi.tilanne.split(\"-\")\n      if ( score[0] > score[1]){\n        wins++\n      }\n    })\n    const percentage = (wins / matsit.length * 100).toFixed(3)\n    return `${percentage}`\n  }\n\n  const determinateHomeland = (vastustaja) => {\n    if (vastustaja === \"los.\"){\n      return \"nl\"\n    }\n    else if (vastustaja === \"eC *\" || vastustaja === \"(t)\"){\n    return \"se\"\n    }\n    else { return \"fi\" }\n  }\n\n const kuvaKaruselli = (seconds) => {\n   const numero = Math.floor(Math.random() * 3)\n   return kuvat[numero]\n }\n  \n  return (\n    <div style={{backgroundColor : \"black\"}}>\n    <Container fluid className=\"kuvakki\">\n      <Row style={{paddingTop: 20, paddingBottom: 20}}>\n       <Col style={{marginLeft: 300, textAlign: \"center\", paddingRight: 0}}>\n       <p className=\"html-rainbow-text\">\n       <h1 className=\"rainbow\">clanwars: {matches.length}</h1>\n       </p>\n       <p style={{color: \"white\"}}>\n         total rounds <span style={{color: \"green\"}}>{totalWins()}</span> - <span style={{color: \"red\"}}>{totalLoses()}</span>\n       </p>\n       <h3 style={{color: \"green\", textAlign: \"center\"}} colSpan={1}>\n       <b>win %: &nbsp;{winPercent(matches)}</b>\n       </h3>\n          <Table className=\"center\" style={{textAlign: \"center\", width: 500}}>\n            <thead>\n              <tr style={{color: \"white\"}}>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 50}}>#</th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 80}}>style</th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 20}}></th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 80, paddingLeft: 0}}>tag</th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 50}}>score</th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 150}}>date</th>\n              </tr>\n              </thead>\n              <tbody>\n                {matches.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()).map((match, i) => \n                    <tr key={i} style={{color: \"white\"}}>\n                      <td style={{borderColor: \"black\"}}>\n                        {matches.length - i}\n                      </td>\n                      <td style={{borderColor: \"black\"}}>\n                        {match.style}\n                      </td>\n                      <td style={{borderColor: \"black\", paddingRight: 0}}>\n                        <img src={`https://www.countryflags.io/${determinateHomeland(match.opponent)}/shiny/64.png`} style={{width:20, height: 20}}/>\n                      </td>\n                      <td style={{borderColor: \"black\", paddingLeft: 0, width:70}}>\n                        {match.opponent}\n                      </td>\n                      <td style={{borderColor: \"black\", color: getColor(match.tilanne)}}>\n                        {match.tilanne}\n                      </td>\n                      <td style={{borderColor: \"black\", width: \"150\"}}>\n                        {`${(new Date(match.date)).getDate()}.${(new Date(match.date)).getMonth() + 1}.${(new Date(match.date)).getFullYear()}`}\n                      </td>\n                    </tr>\n                  )}\n              </tbody>\n          </Table>\n       </Col>\n       <Col style={{textAlign: \"center\", marginRight: 300}}><div><a href=\"https://discord.gg/vPxH6rHU\"><img src={rhk}></img></a></div>\n       <div id=\"picturediv\">\n         <div className=\"image-container\" style={{marginTop: 30}}>\n          <img src={members}/>\n          </div>\n                  <table id=\"pelaajattable\" style={{width: \"100%\", marginTop: 30, color: \"white\"}}>\n                    <tbody style={{width: \"100%\"}}>\n                      {pelaajat.map((pelaaja, i) => \n                          <tr key={i} style={{textAlign: \"center\", verticalAlign: \"middle\", width: \"100%\", marginTop: \"10px\"}}>\n                            <td  className=\"shadow2\" style={{textAlign: \"center\", verticalAlign: \"middle\", width: \"100%\"}}>\n                              {pelaaja}\n                            </td>\n                          </tr>\n                        )}\n                    </tbody>\n                  </table>\n         </div>\n         <img src={hof} style={{marginTop: 30}}/>\n         <div>\n           <table id=\"pelaajattable\" style={{width: \"100%\", marginTop: 30, color: \"white\"}}>\n             <tr style={{textAlign: \"center\", verticalAlign: \"middle\", width: \"100%\", marginTop: \"10px\"}}>\n               <td className=\"shadow2\">\n                 {\"janneP\"}\n               </td>\n             </tr>\n           </table>\n         </div>\n         <div id=\"stage\" style={{marginTop:60}}><img id=\"spinner\" src={kuvaKaruselli(seconds)}></img></div></Col>\n    </Row>\n    </Container>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\martti\\Desktop\\rhk\\src\\reportWebVitals.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":27,"column":10,"nodeType":"33","messageId":"34","endLine":27,"endColumn":14},{"ruleId":"31","severity":1,"message":"35","line":27,"column":16,"nodeType":"33","messageId":"34","endLine":27,"endColumn":23},{"ruleId":"31","severity":1,"message":"36","line":31,"column":10,"nodeType":"33","messageId":"34","endLine":31,"endColumn":16},{"ruleId":"31","severity":1,"message":"37","line":31,"column":18,"nodeType":"33","messageId":"34","endLine":31,"endColumn":27},{"ruleId":"38","severity":1,"message":"39","line":140,"column":25,"nodeType":"40","endLine":140,"endColumn":150},{"ruleId":"38","severity":1,"message":"39","line":156,"column":104,"nodeType":"40","endLine":156,"endColumn":119},{"ruleId":"38","severity":1,"message":"39","line":159,"column":11,"nodeType":"40","endLine":159,"endColumn":31},{"ruleId":"38","severity":1,"message":"39","line":173,"column":10,"nodeType":"40","endLine":173,"endColumn":50},{"ruleId":"38","severity":1,"message":"39","line":183,"column":49,"nodeType":"40","endLine":183,"endColumn":96},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'kuva' is assigned a value but never used.","Identifier","unusedVar","'setKuva' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
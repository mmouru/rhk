{"version":3,"sources":["rhk.png","members.gif","hof.gif","sere0.png","discord.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","matches","setMatches","serebryanka","useEffect","a","axios","get","response","data","console","log","fetchData","getColor","tilanne","score","split","Container","fluid","style","backgroundColor","Row","Col","marginLeft","textAlign","paddingRight","className","length","color","mathces","voitot","forEach","match","parseInt","totalWins","häviöt","totalLoses","colSpan","matsit","wins","matsi","percentage","toFixed","winPercent","Table","width","borderTop","borderColor","paddingLeft","sort","b","Date","date","getTime","map","i","src","vastustaja","opponent","height","getDate","getMonth","getFullYear","href","rhk","id","marginTop","members","pelaaja","verticalAlign","hof","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f95aef61.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rhk.8399ddda.png\";","export default __webpack_public_path__ + \"static/media/members.82f99f31.gif\";","export default __webpack_public_path__ + \"static/media/hof.3bafb31d.gif\";","export default __webpack_public_path__ + \"static/media/sere0.24a037fa.png\";","export default __webpack_public_path__ + \"static/media/discord.c8395284.png\";","import React, { useState, useEffect, Fragment } from 'react'\nimport './App.css';\nimport axios from 'axios'\nimport  Container  from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Table } from 'react-bootstrap' \nimport rhk from './rhk.png'\nimport members from './members.gif'\nimport hof from './hof.gif'\nimport serebryanka from './sere0.png'\nimport discord from './discord.png'\n\n\nfunction App() {\n  const [matches, setMatches] = useState([])\n\n  const pelaajat = [\"penaa\", \"mazze\", \"raksuu\", \"nykzi\", \"kallu\", \"tuomasK (trilu)\"]\n\n  const [kuva, setKuva] = useState(serebryanka)\n\n  const [number, setNumber] = useState(0)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"https://aq2rhk.herokuapp.com\")\n      setMatches(response.data)\n      console.log(response.data)\n      \n    }\n    fetchData();\n  }, []);\n\n  const totalWins = (mathces) => {\n    let voitot = 0\n    matches.forEach(match => {\n      const score = match.tilanne.split(\"-\")\n        voitot += parseInt(score[0])\n    })\n    return voitot\n  }\n\n  const totalLoses = (mathces) => {\n    let häviöt = 0\n    matches.forEach(match => {\n      const score = match.tilanne.split(\"-\")\n        häviöt += parseInt(score[1])\n    })\n    return häviöt\n  }\n  \n  const getColor = (tilanne) => {\n    const score = tilanne.split(\"-\")\n\n    if(score[0] === score[1]){\n      return (\"yellow\")\n    }\n    else if ( score[0] > score[1]){\n      return (\"green\")\n    }\n    else { return (\"red\")}\n  }\n\n  const winPercent = (matsit) => {\n    let wins = 0\n    matsit.forEach(matsi => {\n      const score = matsi.tilanne.split(\"-\")\n      if ( score[0] > score[1]){\n        wins++\n      }\n    })\n    const percentage = (wins / matsit.length * 100).toFixed(3)\n    return `${percentage}`\n  }\n\n  const determinateHomeland = (vastustaja) => {\n    if (vastustaja === \"los.\"){\n      return \"nl\"\n    }\n    else if (vastustaja === \"eC *\" || vastustaja === \"(t)\"){\n    return \"se\"\n    }\n    else { return \"fi\" }\n  }\n  \n  return (\n    <div>\n    <Container fluid style={{backgroundColor: \"black\"}}>\n      <Row>\n       <Col style={{marginLeft: 100, textAlign: \"center\", paddingRight: 0}}>\n       <p className=\"html-rainbow-text\">\n       <h1 className=\"rainbow\">clanwars: {matches.length}</h1>\n       </p>\n       <p style={{color: \"white\"}}>\n         total rounds <span style={{color: \"green\"}}>{totalWins()}</span> - <span style={{color: \"red\"}}>{totalLoses()}</span>\n       </p>\n       <h3 style={{color: \"green\", textAlign: \"center\"}} colSpan={1}>\n       <b>win %: &nbsp;{winPercent(matches)} </b>\n       </h3>\n          <Table className=\"center\" style={{textAlign: \"center\", width: 500}}>\n            <thead>\n              <tr style={{color: \"white\"}}>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 50}}>#</th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 80}}>style</th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 20}}></th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 80, paddingLeft: 0}}>tag</th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 50}}>score</th>\n                <th style={{borderTop: 0, borderColor: \"black\", width: 150}}>date</th>\n              </tr>\n              </thead>\n              <tbody>\n                {matches.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()).map((match, i) => \n                    <tr key={i} style={{color: \"white\"}}>\n                      <td style={{borderColor: \"black\"}}>\n                        {matches.length - i}\n                      </td>\n                      <td style={{borderColor: \"black\"}}>\n                        {match.style}\n                      </td>\n                      <td style={{borderColor: \"black\", paddingRight: 0}}>\n                        <img src={`https://www.countryflags.io/${determinateHomeland(match.opponent)}/shiny/64.png`} style={{width:20, height: 20}}/>\n                      </td>\n                      <td style={{borderColor: \"black\", paddingLeft: 0, width:70}}>\n                        {match.opponent}\n                      </td>\n                      <td style={{borderColor: \"black\", color: getColor(match.tilanne)}}>\n                        {match.tilanne}\n                      </td>\n                      <td style={{borderColor: \"black\", width: \"150\"}}>\n                        {`${(new Date(match.date)).getDate()}.${(new Date(match.date)).getMonth() + 1}.${(new Date(match.date)).getFullYear()}`}\n                      </td>\n                    </tr>\n                  )}\n              </tbody>\n          </Table>\n       </Col>\n       <Col style={{textAlign: \"center\"}}><div><a href=\"https://discord.gg/vPxH6rHU\"><img src={rhk}></img></a></div>\n       <div id=\"picturediv\">\n         <div className=\"image-container\" style={{marginTop: 30}}>\n          <img src={members}/>\n          </div>\n                  <table id=\"pelaajattable\" style={{width: \"100%\", marginTop: 30, color: \"white\"}}>\n                    <tbody style={{width: \"100%\"}}>\n                      {pelaajat.map((pelaaja, i) => \n                          <tr key={i} style={{textAlign: \"center\", verticalAlign: \"middle\", width: \"100%\", marginTop: \"10px\"}}>\n                            <td style={{textAlign: \"center\", verticalAlign: \"middle\", width: \"100%\"}}>\n                              {pelaaja}\n                            </td>\n                          </tr>\n                        )}\n                    </tbody>\n                  </table>\n         </div>\n         <img src={hof} style={{marginTop: 30}}/>\n         <div>\n           <table id=\"pelaajattable\" style={{width: \"100%\", marginTop: 30, color: \"white\"}}>\n             <tr style={{textAlign: \"center\", verticalAlign: \"middle\", width: \"100%\", marginTop: \"10px\"}}>\n               <td>\n                 {\"janneP\"}\n               </td>\n             </tr>\n           </table>\n         </div>\n         <div id=\"stage\" style={{marginTop:60}}><img id=\"spinner\" src={serebryanka}></img></div></Col>\n    </Row>\n    </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
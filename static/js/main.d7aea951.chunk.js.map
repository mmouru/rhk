{"version":3,"sources":["sere.png","rhk.png","members.gif","App.js","reportWebVitals.js","index.js"],"names":["App","useState","matches","setMatches","useEffect","a","axios","get","response","data","console","log","fetchData","getColor","tilanne","score","split","Container","fluid","style","backgroundColor","Row","Col","marginLeft","className","textAlign","length","color","colSpan","matsit","wins","forEach","matsi","percentage","toFixed","winPercent","Table","borderTop","borderBottom","map","match","i","opponent","Date","date","getDate","getMonth","getFullYear","src","rhk","id","marginTop","members","width","pelaaja","verticalAlign","serebryanka","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7aea951.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sere.24a037fa.png\";","export default __webpack_public_path__ + \"static/media/rhk.8399ddda.png\";","export default __webpack_public_path__ + \"static/media/members.82f99f31.gif\";","import React, { useState, useEffect, Fragment } from 'react'\nimport './App.css';\nimport axios from 'axios'\nimport  Container  from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Table } from 'react-bootstrap'\nimport serebryanka from './sere.png'\nimport rhk from './rhk.png'\nimport members from './members.gif'\n\nfunction App() {\n  const [matches, setMatches] = useState([])\n\n  const pelaajat = [\"penaa\", \"mazze\", \"raksuu\", \"nykzi\", \"kallu\", \"tuomasK\"]\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"https://aq2rhk.herokuapp.com\")\n      setMatches(response.data)\n      console.log(response.data)\n      \n    }\n    fetchData();\n  }, []);\n  \n  const getColor = (tilanne) => {\n    const score = tilanne.split(\"-\")\n\n    if(score[0] === score[1]){\n      return (\"yellow\")\n    }\n    else if ( score[0] > score[1]){\n      return (\"green\")\n    }\n    else { return (\"red\")}\n  }\n\n  const winPercent = (matsit) => {\n    let wins = 0\n    matsit.forEach(matsi => {\n      const score = matsi.tilanne.split(\"-\")\n      if ( score[0] > score[1]){\n        wins++\n      }\n    })\n    const percentage = (wins / matsit.length * 100).toFixed(3)\n    return `${percentage}`\n  }\n\n\n  return (\n    <div>\n    <Container fluid style={{backgroundColor: \"black\"}}>\n      <Row>\n       <Col style={{marginLeft: 100}}>\n       <p className=\"html-rainbow-text\" style={{textAlign: \"center\"}}>\n       <h1 className=\"rainbow\">total matches: {matches.length}</h1>\n       </p>\n       <h3 style={{color: \"green\", textAlign: \"center\"}} colSpan={1}>\n       <b>win %: &nbsp;{winPercent(matches)} </b>\n       </h3>\n          <Table style={{textAlign: \"center\"}}>\n            <thead>\n              <tr style={{color: \"white\"}}>\n                <th style={{borderTop: 0, borderBottom: 0}}>#</th>\n                <th style={{borderTop: 0, borderBottom: 0}}>style</th>\n                <th style={{borderTop: 0, borderBottom: 0}}>opponent</th>\n                <th style={{borderTop: 0, borderBottom: 0}}>score</th>\n                <th style={{borderTop: 0, borderBottom: 0}}>date</th>\n              </tr>\n              </thead>\n              <tbody>\n                {matches.map((match, i) => \n                    <tr key={i} style={{color: getColor(match.tilanne)}}>\n                      <td style={{borderTop: 0}}>\n                        {i + 1}\n                      </td>\n                      <td style={{borderTop: 0}}>\n                        {match.style}\n                      </td>\n                      <td style={{borderTop: 0}}>\n                        {match.opponent}\n                      </td>\n                      <td style={{borderTop: 0}}>\n                        {match.tilanne}\n                      </td>\n                      <td style={{borderTop: 0}}>\n                        {`${(new Date(match.date)).getDate()}/${(new Date(match.date)).getMonth() + 1}/${(new Date(match.date)).getFullYear()}`}\n                      </td>\n                    </tr>\n                  )}\n              </tbody>\n          </Table>\n       </Col>\n       <Col style={{textAlign: \"center\"}}><div><img src={rhk}></img></div>\n       <div id=\"picturediv\">\n         <div className=\"image-container\" style={{marginTop: 30}}>\n          <img src={members}/>\n          </div>\n                  <table id=\"pelaajattable\" style={{width: \"100%\", marginTop: 30, color: \"white\"}}>\n                    <tbody style={{width: \"100%\"}}>\n                      {pelaajat.map((pelaaja, i) => \n                          <tr key={i} style={{textAlign: \"center\", verticalAlign: \"middle\", width: \"100%\", marginTop: \"10px\"}}>\n                            <td style={{textAlign: \"center\", verticalAlign: \"middle\", width: \"100%\"}}>\n                              {pelaaja}\n                            </td>\n                          </tr>\n                        )}\n                    </tbody>\n                  </table>\n         </div>\n         <div id=\"stage\" style={{marginTop:60}}><img id=\"spinner\" src={serebryanka}></img></div></Col>\n    </Row>\n    </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}